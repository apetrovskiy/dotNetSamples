<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NSpecAdapterForXunit</name>
    </assembly>
    <members>
        <member name="T:NSpecAdapterForXunit.SpecificationAttribute">
            <summary>
            Attribute used to decorate a NSpec specification method.
            </summary>
        </member>
        <member name="M:NSpecAdapterForXunit.SpecificationAttribute.EnumerateTestCommands(Xunit.Sdk.IMethodInfo)">
            <summary>
            Enumerates the test commands represented by this test method. Derived classes should
            override this method to return instances of <see cref="T:Xunit.Sdk.ITestCommand"/>, one per execution
            of a test method.
            </summary>
            <param name="method">The test method</param>
            <returns>
            The test commands which will execute the test runs for the given method
            </returns>
            <remarks>
            Returns all child examples in all contexts.
            </remarks>
        </member>
        <member name="T:NSpecAdapterForXunit.NSpecClassCommand">
            <summary>
            Implements an <see cref="T:ITestClassCommand"/> that can create commands to all examples contained in a given specification class.
            </summary>
        </member>
        <member name="M:NSpecAdapterForXunit.NSpecClassCommand.ChooseNextTest(System.Collections.Generic.ICollection{Xunit.Sdk.IMethodInfo})">
            <summary>
            Allows the test class command to choose the next test to be run from the list of
            tests that have not yet been run, thereby allowing it to choose the run order.
            </summary>
            <param name="testsLeftToRun">The tests remaining to be run</param>
            <returns>
            The index of the test that should be run
            </returns>
        </member>
        <member name="M:NSpecAdapterForXunit.NSpecClassCommand.ClassFinish">
            <summary>
            Execute actions to be run after all the test methods of this test class are run.
            </summary>
            <returns>
            Returns the <see cref="T:System.Exception"/> thrown during execution, if any; null, otherwise
            </returns>
        </member>
        <member name="M:NSpecAdapterForXunit.NSpecClassCommand.ClassStart">
            <summary>
            Execute actions to be run before any of the test methods of this test class are run.
            </summary>
            <returns>
            Returns the <see cref="T:System.Exception"/> thrown during execution, if any; null, otherwise
            </returns>
        </member>
        <member name="M:NSpecAdapterForXunit.NSpecClassCommand.EnumerateTestCommands(Xunit.Sdk.IMethodInfo)">
            <summary>
            Enumerates the test commands for a given test method in this test class.
            </summary>
            <param name="testMethod">The method under test</param>
            <returns>
            The test commands for the given test method
            </returns>
        </member>
        <member name="M:NSpecAdapterForXunit.NSpecClassCommand.EnumerateTestMethods">
            <summary>
            Enumerates the methods which are test methods in this test class.
            </summary>
            <returns>
            The test methods
            </returns>
        </member>
        <member name="M:NSpecAdapterForXunit.NSpecClassCommand.IsTestMethod(Xunit.Sdk.IMethodInfo)">
            <summary>
            Determines if a given <see cref="T:Xunit.Sdk.IMethodInfo"/> refers to a test method.
            </summary>
            <param name="testMethod">The test method to validate</param>
            <returns>
            True if the method is a test method; false, otherwise
            </returns>
        </member>
        <member name="P:NSpecAdapterForXunit.NSpecClassCommand.ObjectUnderTest">
            <summary>
            Gets the object instance that is under test. May return null if you wish
            the test framework to create a new object instance for each test method.
            </summary>
        </member>
        <member name="P:NSpecAdapterForXunit.NSpecClassCommand.TypeUnderTest">
            <summary>
            Gets or sets the type that is being tested
            </summary>
        </member>
        <member name="T:NSpecAdapterForXunit.RunWithNSpecAttribute">
            <summary>
            Attribute used to decorate a NSpec specification class
            </summary>
        </member>
        <member name="M:NSpecAdapterForXunit.RunWithNSpecAttribute.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NSpecAdapterForXunit.RunWithNSpecAttribute"/> class.
            </summary>
        </member>
        <member name="T:NSpecAdapterForXunit.ExampleCommand">
            <summary>
            Implements a <see cref="T:Xunit.Sdk.ITestCommand"/> that invokes all NSpec <see cref="T:NSpec.Domain.Example"/> in one method.
            </summary>
        </member>
        <member name="M:NSpecAdapterForXunit.ExampleCommand.#ctor(Xunit.Sdk.IMethodInfo,NSpec.Domain.Example,NSpec.nspec)">
            <summary>
            Initializes a new instance of the <see cref="T:NSpecAdapterForxUnit.ExampleCommand"/> to a specific <see cref="T:NSpec.Domain.Example"/>.
            </summary>
            <param name="method">The method that contains the <paramref name="example"/>.</param>
            <param name="example">The example to run.</param>
            <param name="instance">The instance to run the example.</param>
            <exception cref="T:System.ArgumentNullException">One of the arguments is <see langword="null"/>. </exception>
        </member>
        <member name="M:NSpecAdapterForXunit.ExampleCommand.ToStartXml">
            <summary>
            Creates the start XML to be sent to the callback when the test is about to start
            running.
            </summary>
            <returns>
            Return the <see cref="T:System.Xml.XmlNode"/> of the start node, or null if the test
            is known that it will not be running.
            </returns>
        </member>
        <member name="M:NSpecAdapterForXunit.ExampleCommand.Execute(System.Object)">
            <summary>
            Executes the test method.
            </summary>
            <param name="testClass">The instance of the test class</param>
            <returns>
            Returns information about the test run
            </returns>
        </member>
        <member name="M:NSpecAdapterForXunit.ExampleCommand.CreateForMethod(Xunit.Sdk.IMethodInfo)">
            <summary>
            Obtains all test commands to call all examples contained in a given <see cref="T:IMethodInfo"/>.
            </summary>
            <param name="method">The method to scan.</param>
            <returns>All test commands to call all examples contained in <paramref name="method"/>.</returns>
        </member>
        <member name="M:NSpecAdapterForXunit.ExampleCommand.BuildCommandList(Xunit.Sdk.IMethodInfo,NSpec.nspec,NSpec.Domain.Context,System.Collections.Generic.List{Xunit.Sdk.ITestCommand})">
            <summary>
            Recursively adds commands to all examples in a given <see cref="T:Context"/>.
            </summary>
            <param name="method">The method where the examples belong.</param>
            <param name="instance">The <see cref="T:nspec"/> instance.</param>
            <param name="context">The parent context.</param>
            <param name="commands">A list where the commands will be stored.</param>
        </member>
        <member name="P:NSpecAdapterForXunit.ExampleCommand.Method">
            <summary>
            Gets the method that contains the <see cref="P:Example"/>.
            </summary>
            <value>The method that contains the <see cref="P:Example"/>.</value>
        </member>
        <member name="P:NSpecAdapterForXunit.ExampleCommand.Example">
            <summary>
            Gets the <see cref="T:NSpec.Domain.Example"/> to run.
            </summary>
            <value>The <see cref="T:NSpec.Domain.Example"/> to run.</value>
        </member>
        <member name="P:NSpecAdapterForXunit.ExampleCommand.Instance">
            <summary>
            Gets the <see cref="T:NSpec.nspec"/> instance to run the example.
            </summary>
            <value>The <see cref="T:NSpec.nspec"/> instance to run the example.</value>
        </member>
        <member name="P:NSpecAdapterForXunit.ExampleCommand.DisplayName">
            <summary>
            Gets the display name of the test method.
            </summary>
        </member>
        <member name="P:NSpecAdapterForXunit.ExampleCommand.ShouldCreateInstance">
            <summary>
            Determines if the test runner infrastructure should create a new instance of the
            test class before running the test.
            </summary>
        </member>
        <member name="P:NSpecAdapterForXunit.ExampleCommand.Timeout">
            <summary>
            Determines if the test should be limited to running a specific amount of time
            before automatically failing.
            </summary>
            <returns>The timeout value, in milliseconds; if zero, the test will not have
            a timeout.</returns>
        </member>
    </members>
</doc>
