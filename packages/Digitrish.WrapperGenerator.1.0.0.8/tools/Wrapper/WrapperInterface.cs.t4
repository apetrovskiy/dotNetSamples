<#@ Template Language="C#" HostSpecific="True" Inherits="DynamicTransform" #>
<#@ Output Extension="cs" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Text.RegularExpressions" #> 
<#@ include file="WrapperCommon.cs.t4" #>//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a Scaffolder Wrapper Code Generator https://www.nuget.org/packages/Digitrish.WrapperGenerator/	
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//	   Date Created: <#= DateTime.Today.ToString("yyyy-MM-dd") #>
// </auto-generated>
//------------------------------------------------------------------------------
<#foreach(var item in DiscoverAllRequireNamespace(GetType(Model), true, true)){ #>
using <#= item #>;
<#}#>	

namespace <#= Model.Namespace #>.Wrapper.Contract
{
	public interface I<#= Model.ClassName #> 
	{
<#foreach(var item in GetProperties(GetType(Model))){ #>
		<#= GenerateTypeName(item.PropertyType) #> <#= item.Name #> { <#= item.CanRead ? "get;" : "" #> <#= item.CanWrite ? "set;" : "" #> }
<#}#>

<#foreach(var item in GetMethods(Model)){ #>
		<#= GenerateTypeName(item.ReturnType) #> <#= item.Name #>(<#= GenerateParameter(item.GetParameters(), true) #>);
<#}#>

<#foreach(var item in GetEvents(Model)){ #>
		event <#= GenerateTypeName(item.EventHandlerType) #> <#= item.Name #>;
<#}#>
	}
}


